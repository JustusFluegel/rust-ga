name: Cargo Build & Test

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings

jobs:
  build_and_test:
    name: unhindered-ec - latest
    runs-on: ubuntu-latest
    strategy:
      # This ensures that all three toolchains will run even if one of
      # them fails. This, for example, prevents a `nightly` failure
      # from blocking `stable` and `beta` from running.
      fail-fast: false
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@a54c7afa936fefeb4456b2dd8068152669aa8203
        with:
          components: clippy, rustfmt
          toolchain: ${{ matrix.toolchain }}
      - run: cargo build --verbose
      - run: cargo test --all-targets --verbose
      - run: cargo test --doc --verbose
      - run: cargo clippy --all-targets
      - run: cargo install rustfmt-unstable
      # Currently (v1.x) rustfmt accepts unstable features as
      # arguments only, this wrapper reads the file and passes
      # them as arguments. Rustfmt v2.x won't have this limitation
      # anymore and then this wrapper can be removed.
      - run: rustfmt-unstable --config-file rustfmt.toml -- cargo fmt --check -- --config error_on_line_overflow=true
      - run: cargo install example-runner-cli
      - run: example-runner-cli --error-on-unconfigured --error-on-unknown --parallel
  doctest-clippy:
    name: clippy doctests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@a54c7afa936fefeb4456b2dd8068152669aa8203
        with:
          components: clippy
          toolchain: nightly
      - run: chmod +x scripts/cargo-rustdoc-clippy && export PATH="$(pwd)/scripts/:$PATH" && cargo rustdoc-clippy -- -Dwarnings
